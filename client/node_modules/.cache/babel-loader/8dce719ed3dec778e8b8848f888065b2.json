{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cesar\\\\Desktop\\\\contact-keeper\\\\client\\\\src\\\\components\\\\contacts\\\\Contacts.js\";\nimport React, { Fragment, useContext } from \"react\";\nimport ContactItem from \"./ContactItem\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\nconst Contacts = () => {\n  //defining ContactContext, we can use any state and actions with contact context\n  const contactContext = useContext(ContactContext);\n  const contacts = contactContext.contacts,\n        filtered = contactContext.filtered;\n\n  if (contacts.length === 0) {\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Please add a contact\");\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, filtered != null ? filtered.map(contact => React.createElement(ContactItem, {\n    key: contact.id,\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })) : contacts.map(contact => React.createElement(ContactItem, {\n    key: contact.id,\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["C:\\Users\\Cesar\\Desktop\\contact-keeper\\client\\src\\components\\contacts\\Contacts.js"],"names":["React","Fragment","useContext","ContactItem","ContactContext","Contacts","contactContext","contacts","filtered","length","map","contact","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB;AACA,QAAMC,cAAc,GAAGJ,UAAU,CAACE,cAAD,CAAjC;AAFqB,QAIbG,QAJa,GAIUD,cAJV,CAIbC,QAJa;AAAA,QAIHC,QAJG,GAIUF,cAJV,CAIHE,QAJG;;AAMrB,MAAID,QAAQ,CAACE,MAAT,KAAoB,CAAxB,EAA2B;AACzB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACD;;AAED,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,IAAI,IAAZ,GACGA,QAAQ,CAACE,GAAT,CAAaC,OAAO,IAClB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA1B;AAA8B,IAAA,OAAO,EAAED,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADH,GAIGJ,QAAQ,CAACG,GAAT,CAAaC,OAAO,IAClB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA1B;AAA8B,IAAA,OAAO,EAAED,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALN,CADF;AAWD,CArBD;;AAuBA,eAAeN,QAAf","sourcesContent":["import React, { Fragment, useContext } from \"react\";\r\nimport ContactItem from \"./ContactItem\";\r\nimport ContactContext from \"../../context/contact/contactContext\";\r\n\r\nconst Contacts = () => {\r\n  //defining ContactContext, we can use any state and actions with contact context\r\n  const contactContext = useContext(ContactContext);\r\n\r\n  const { contacts, filtered } = contactContext;\r\n\r\n  if (contacts.length === 0) {\r\n    return <h4>Please add a contact</h4>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {filtered != null\r\n        ? filtered.map(contact => (\r\n            <ContactItem key={contact.id} contact={contact} />\r\n          ))\r\n        : contacts.map(contact => (\r\n            <ContactItem key={contact.id} contact={contact} />\r\n          ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n"]},"metadata":{},"sourceType":"module"}